<?xml version="1.0" encoding="UTF-8"?>
<project name="RancherPHP" default="build">

    <property name="toolsdir" value="${basedir}/bin"/>

    <target name="build"
            depends="prepare,lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci,phpunit,phpdoc"
            description="Run all targets"/>

    <target name="build-parallel" description="Run all targets in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd-ci"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc-ci"/>
        </parallel>
    </target>

    <target name="clean"
            unless="clean.done"
            description="Clean up build folder">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="prepare"
            unless="prepare.done"
            depends="clean"
            description="Prepare build folder">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <property name="prepare.done" value="true"/>
    </target>

    <target name="lint"
            description="Check for syntax error">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>

            <fileset dir="${basedir}/src">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
        </apply>
    </target>

    <target name="phploc"
            description="Count lines of code">
        <exec executable="${toolsdir}/phploc">
            <arg value="--count-tests"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phploc-ci"
            depends="prepare"
            description="Print lines of code for continuous integration">
        <exec executable="${toolsdir}/phploc" output="/dev/null">
            <arg value="--count-tests"/>
            <arg value="--log-csv"/>
            <arg path="${basedir}/build/logs/phploc.csv"/>
            <arg value="--log-xml"/>
            <arg path="${basedir}/build/logs/phploc.xml"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="pdepend"
            depends="prepare"
            description="Check dependency graph">
        <exec executable="${toolsdir}/pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/logs/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpmd"
            description="Detect messy code">
        <exec executable="${toolsdir}/phpmd">
            <arg path="${basedir}/src"/>
            <arg value="text"/>
            <arg value="${basedir}/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Detect messy code for continuous integration">
        <exec executable="${toolsdir}/phpmd" output="/dev/null">
            <arg path="${basedir}/src"/>
            <arg value="xml"/>
            <arg value="${basedir}/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg path="${basedir}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Run PHP CodeSniffer">
        <exec executable="${toolsdir}/phpcs">
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            depends="prepare"
            description="Run PHP CodeSniffer for continuous integration">
        <exec executable="${toolsdir}/phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcpd"
            description="Copy and Paste detection">
        <exec executable="${toolsdir}/phpcpd">
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcpd-ci"
            depends="prepare"
            description="Copy and Paste detection for continuous integration">
        <exec executable="${toolsdir}/phpcpd" output="/dev/null">
            <arg value="--log-pmd"/>
            <arg path="${basedir}.build/logs/pmd-cpd.xml"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpunit"
            depends="prepare"
            description="Run unit tests">
        <apply executable="${toolsdir}/phpunit" failonerror="true">
            <arg value="--configuration"/>
            <arg path="${basedir}/phpunit.xml.dist"/>
        </apply>
    </target>

    <target name="phpdoc"
            depends="prepare"
            description="Generate API documentation">
        <exec executable="${toolsdir}/phpdoc">
            <arg line="-d ${basedir}/src"/>
            <arg line="-t ${basedir}/build/api"/>
        </exec>
    </target>
</project>